{
  "name": "@cmchu/lazy-get-result",
  "author": "cmchu",
  "version": "0.0.1",
  "license": "MIT",
"description": "A lightweight utility for implementing lazy evaluation in JavaScript/TypeScript applications. This module provides a function to wrap any computationally expensive operation, ensuring it's executed only once and its result is cached for all subsequent calls, thereby enhancing performance and efficiency.",
  "keywords": [
    "lazy evaluation",
    "memoization",
    "performance optimization",
    "function caching",
    "utility",
    "typescript",
    "javascript"
  ],
  "type": "module",
  "files": [
    "dist",
    "index.d.ts"
  ],
  "main": "./dist/index.umd.cjs",
  "module": "./dist/index.js",
  "types": "./index.d.ts",
  "exports": {
    "types": "./index.d.ts",
    "import": "./dist/index.js",
    "require": "./dist/index.umd.cjs"
  },
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "scripts": {
    "build": "tsc && vite build"
  },
  "devDependencies": {
    "typescript": "^5.4.5",
    "vite": "^5.2.10"
  }
}